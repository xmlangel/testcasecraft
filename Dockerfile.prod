# Production Dockerfile - runs a pre-built JAR
FROM openjdk:21-jdk-slim

# Install dumb-init for proper signal handling and create a non-root user
RUN apt-get update && \
    apt-get install -y dumb-init && \
    rm -rf /var/lib/apt/lists/* && \
    groupadd --system --gid 1001 appgroup && \
    useradd --system --uid 1001 --gid appgroup appuser

WORKDIR /app

# Create necessary directories and set permissions
RUN mkdir -p /app/uploads /app/uploads/junit /app/logs /var/log/testcase && \
    chown -R appuser:appgroup /app /var/log/testcase && \
    chmod -R 755 /app/uploads /app/logs /var/log/testcase

# Copy the pre-built JAR file from the project's build output directory
# The path is relative to the Dockerfile location in docker-compose-prod/
COPY --chown=appuser:appgroup TestCaseCraft-0.0.1-SNAPSHOT.jar app.jar

# Copy application configuration files
COPY --chown=appuser:appgroup application*.yml ./

# Set environment variables for production
ENV REACT_APP_API_BASE_URL=http://localhost
ENV spring_profiles_active=prod
ENV JAVA_OPTS="-Xmx2g -Xms1g -XX:+UseG1GC -XX:+UseContainerSupport"

# Switch to the non-root user
USER appuser

# Expose the application port
EXPOSE 8080

# Use dumb-init as the entrypoint to handle signals correctly
ENTRYPOINT ["dumb-init", "--"]

# Command to run the application
CMD ["sh", "-c", "java $JAVA_OPTS -jar app.jar"]
